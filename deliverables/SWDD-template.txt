
1.0 INTRODUCTION
1.1 Purpose
	This software design document describes the architecture and system design of  the “CommenCents” budgeting app.

1.2 Scope
	The goal of this app is to help users manage their income/expenses, budget for their everyday needs, and set goals according to their budget.

1.3 Overview
	This document describes the 


2.0 SYSTEM OVERVIEW

Give a general description of the functionality, context and design of your project. Provide any background information if necessary.

3.0 SYSTEM ARCHITECTURE

3.1 Architectural Design
	Develop a modular program structure and explain the relationships between the modules to achieve the complete functionality of the system. This is a high level overview of how responsibilities of the system were partitioned and then assigned to subsystems. Identify each high level subsystem and the roles or responsibilities assigned to it. Describe how these subsystems collaborate with each other in order to achieve the desired functionality. Don’t go into too much detail about the individual subsystems. The main purpose is to gain a general understanding of how and why the system was decomposed, and how the individual parts work together. Provide a diagram showing the major subsystems and data repositories and their interconnections. Describe the diagram if required.
	3.1.1 Login
	3.1.2 Home Page
		- 
	3.1.3 Income/ expense
	3.1.4 Budget
	3.1.5 Goal


4.0 DATA DESIGN

4.1 Data Description
	Explain how the information domain of your system is transformed into data structures. Describe how the major data or system entities are stored, processed and organized. List any databases or data storage items.


5.0 HUMAN INTERFACE DESIGN

5.1 Overview of User Interface

	Describe the functionality of the system from the user’s perspective. Explain how the user will be able to use your system to complete all the expected features and the feedback information that will be displayed for the user.

5.2 Screen Images
	Display screenshots showing the interface from the user’s perspective. These can be hand­ drawn or you can use an automated drawing tool. Just make them as accurate as possible. (Graph paper works well.)

5.3 Screen Objects and Actions

	A discussion of screen objects and actions associated with those objects.


6.0 REQUIREMENTS MATRIX (optional)
Provide a cross­reference that traces components and data structures to the requirements in your software requirements specification (SWRS) document.

Use a tabular format to show which system components satisfy each of the functional requirements from the SWRS. Refer to the functional requirements by the numbers/codes that you gave them in the SWRS.


7.0 APPENDICES (optional)

This section is optional.

Appendices may be included, either directly or by reference, to provide supporting details that could aid in the understanding of the Software Design Document.
1 Available to LANL users at http://ieeexplore.ieee.org/browse/standards/collection/ieee	
---------------

------------------------------------------------------------

---------------

------------------------------------------------------------





